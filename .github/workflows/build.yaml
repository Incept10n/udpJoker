name: Build and Push to DockerHub and also intall Docker

on:
  push:
    branches: [ master ]
    paths-ignore:
      - 'terraform/**'
  pull_request:
    branches: [ master ]
    paths-ignore:
      - 'terraform/**'
  workflow_dispatch:

env:
  ANSIBLE_HOST_KEY_CHECKING: "False"

jobs:
  push_to_registry:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
      attestations: write
      id-token: write
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: incept1on/udp-joker

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        with:
          context: .
          file: Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          provenance: false

  Install-docker:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Fix private key permissions
      run: |
        echo -n "${{ secrets.SSH_PRIVATE_KEY }}" > ansible/private_key
        chmod 600 ansible/private_key

    - name: Install Ansible
      run: |
        python -m pip install --upgrade pip
        pip install ansible

    - name: Validate Ansible installation
      run: ansible --version

    - name: Make vault pass file
      run: |
        touch vault_pass.txt
        echo -n "${{ secrets.ANSIBLE_VAULT_PASS }}" > vault_pass.txt

    - name: Validate inventory file
      run: |
        if [ ! -f "ansible/inventory.yaml" ]; then
          echo "Error: inventory.yaml not found!"
          exit 1
        fi
        ansible-inventory -i ansible/inventory.yaml --list --vault-password-file vault_pass.txt

    - name: Validate playbook syntax
      run: ansible-playbook -i ansible/inventory.yaml --syntax-check ansible/main.ansible.yaml --vault-password-file vault_pass.txt

    - name: Test connection to hosts
      run: |
        ansible all -i ansible/inventory.yaml -m ping --vault-password-file vault_pass.txt -vvv

    - name: Run Ansible playbook to install Docker
      run: |
        ansible-playbook -i ansible/inventory.yaml ansible/main.ansible.yaml --vault-password-file vault_pass.txt
      env:
        ANSIBLE_HOST_KEY_CHECKING: "False"

    - name: Verify Docker installation
      run: |
        ansible all -i ansible/inventory.yaml -a "docker --version" --vault-password-file vault_pass.txt

    - name: Verify Docker Compose installation
      run: |
        ansible all -i ansible/inventory.yaml -a "docker-compose --version" --vault-password-file vault_pass.txt

    - name: Show Docker info
      run: |
        ansible all -i ansible/inventory.yaml -a "docker info" --vault-password-file vault_pass.txt | grep -A 10 "Server Version"
