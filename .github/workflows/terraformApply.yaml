name: Terraform Plan and Apply

on:
  push:
    branches: [ master ]
    paths:
      - 'terraform/**'
  pull_request:
    branches: [ master ]
    paths:
      - 'terraform/**'
  workflow_dispatch:

env:
  TF_VERSION: "1.11.4"
  YC_TOKEN: "${{ secrets.YC_TOKEN }}"
  YC_CLOUD_ID: "${{ secrets.YC_CLOUD_ID }}"
  YC_FOLDER_ID: "${{ secrets.YC_FOLDER_ID }}"
  YC_ZONE: "ru-central1-b"

defaults:
  run:
    working-directory: ./terraform 

jobs:
  terraform:
    name: Terraform
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ env.TF_VERSION }}

    - name: Install Yandex Cloud CLI
      run: |
        curl -sSL https://storage.yandexcloud.net/yandexcloud-yc/install.sh | bash
        source "/home/runner/.bashrc"

    - name: Validate yc installation
      run: |
        yc version

    - name: Configure Yandex Cloud credentials
      run: |
        yc config profile create newprofile 
        yc config set oauth-token $YC_TOKEN
        yc config set cloud-id $YC_CLOUD_ID
        yc config set folder-id $YC_FOLDER_ID
        yc config set compute-default-zone $YC_ZONE
        export YC_TOKEN=$(yc iam create-token --impersonate-service-account-id "${{ secrets.TERRAFORM_SERVICE_ACC_ID }}")
        export YC_CLOUD_ID=$(yc config get cloud-id)
        export YC_FOLDER_ID=$(yc config get folder-id)
        export ACCESS_KEY="${{ secrets.YC_ACCESS_KEY }}"
        export SECRET_KEY="${{ secrets.YC_SECRET_KEY }}"
        
    - name: Terraform Format
      id: fmt
      run: terraform fmt -check

    - name: Terraform Init
      id: init
      run: terraform init -backend-config="access_key=$ACCESS_KEY" -backend-config="secret_key=$SECRET_KEY"

    - name: Terraform Validate
      id: validate
      run: terraform validate

    - name: Terraform Plan
      id: plan
      run: terraform plan -no-color -input=false

    - name: Terraform Apply
      run: terraform apply -input=false 
