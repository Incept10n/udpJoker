name: Install Docker on Remote Hosts

on:
  push:
    branches: [  master ]
  workflow_dispatch:

env:
  ANSIBLE_HOST_KEY_CHECKING: "False"

jobs:
  install-docker:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Ansible
      run: |
        python -m pip install --upgrade pip
        pip install ansible

    - name: Validate Ansible installation
      run: ansible --version

    - name: Make vault pass file
      run: |
        echo -n "${{ secrets.ANSIBLE_VAULT_PASS }}" > vault_pass.txt

    - name: Validate inventory file
      run: |
        if [ ! -f "ansible/inventory.yaml" ]; then
          echo "Error: inventory.yaml not found!"
          exit 1
        fi
        ansible-inventory -i ansible/inventory.yaml --list --vault-password-file vault_pass.txt

    - name: Validate playbook syntax
      run: ansible-playbook -i ansible/inventory.yaml --syntax-check /ansible/main.yaml --vault-password-file vault_pass.txt

    - name: Test connection to hosts
      run: |
        ansible all -i ansible/inventory.yaml -m ping \
          --private-key "${{ secrets.SSH_PRIVATE_KEY }} --vault-password-file vault_pass.txt"

    - name: Run Ansible playbook to install Docker
      run: |
        ansible-playbook -i ansible/inventory.yaml ansible/main.yaml \
          --private-key "${{ secrets.SSH_PRIVATE_KEY }}" --vault-password-file vault_pass.txt \
      env:
        ANSIBLE_HOST_KEY_CHECKING: "False"

    - name: Verify Docker installation
      run: |
        ansible all -i ansible/inventory.yaml -a "docker --version" --vault-password-file vault_pass.txt \
          --private-key "${{ secrets.SSH_PRIVATE_KEY }}"

    - name: Verify Docker Compose installation
      run: |
        ansible all -i ansible/inventory.yaml -a "docker-compose --version" --vault-password-file vault_pass.txt \
          --private-key "${{ secrets.SSH_PRIVATE_KEY }}"

    - name: Show Docker info
      run: |
        ansible all -i ansible/inventory.yaml -a "docker info" \
          --private-key "${{ secrets.SSH_PRIVATE_KEY }}" --vault-password-file vault_pass.txt \
          | grep -A 10 "Server Version"
