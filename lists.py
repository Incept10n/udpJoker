from telebot import types
from telebot import TeleBot

from utils import save_data

def handle_show_my_lists(message, bot: TeleBot, lists):
    markup = types.InlineKeyboardMarkup()
    for list_name in lists:
        markup.add(types.InlineKeyboardButton(
            f"üìã {list_name}", 
            callback_data=f"show_list_{list_name}"
        ))
    
    bot.send_message(message.chat.id, "üìÇ –í–∞—à–∏ —Å–ø–∏—Å–∫–∏:", reply_markup=markup)


def handle_show_list_callback(call, lists, bot: TeleBot):
    list_name = call.data.replace('show_list_', '')
    
    if list_name in lists:
        items = lists[list_name]
        if not items:
            bot.send_message(call.message.chat.id, f"üì≠ –°–ø–∏—Å–æ–∫ '{list_name}' –ø—É—Å—Ç.")
            return
        
        response = f"üìã **–°–ø–∏—Å–æ–∫: {list_name}**\n\n"
        for i, item in enumerate(items):
            link_text = f"üîó {item['link']}" 
            desc_text = item.get('desc', '')  
            if desc_text == '':
                response += f"{i}. {link_text} {desc_text}\n"
            else:
                response += f"{i}. {link_text} - {desc_text}\n"
        
        bot.send_message(call.message.chat.id, response, parse_mode='Markdown')
    else:
        bot.send_message(call.message.chat.id, "‚ùå –°–ø–∏—Å–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω.")


def handle_list_create_command(message, data, bot: TeleBot):
    try:
        # –†–∞–∑–¥–µ–ª—è–µ–º –∫–æ–º–∞–Ω–¥—É –∏ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
        command_parts = message.text.split(' ', 2)
        list_name = command_parts[0][1:].lower().strip()  # –£–±–∏—Ä–∞–µ–º / –∏–∑ –Ω–∞–∑–≤–∞–Ω–∏—è —Å–ø–∏—Å–∫–∞
        
        # –ï—Å–ª–∏ —Ç–æ–ª—å–∫–æ –∫–æ–º–∞–Ω–¥–∞ –±–µ–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
        if len(command_parts) == 1:
            if list_name in data:
                # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π —Å–ø–∏—Å–æ–∫
                items = data[list_name]
                if not items:
                    bot.send_message(message.chat.id, f"üì≠ –°–ø–∏—Å–æ–∫ '{list_name}' –ø—É—Å—Ç.")
                    return
                
                response = f"üìã **–°–ø–∏—Å–æ–∫: {list_name}**\n\n"
                for i, item in enumerate(items):
                    link_text = f"üîó {item['link']}" 
                    desc_text = item.get('desc', '')  
                    if desc_text == '':
                        response += f"{i}. {link_text} {desc_text}\n"
                    else:
                        response += f"{i}. {link_text} - {desc_text}\n"
                
                bot.send_message(message.chat.id, response, parse_mode='Markdown')
            else:
                # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –ø—É—Å—Ç–æ–π —Å–ø–∏—Å–æ–∫
                data[list_name] = []
                save_data("lists.json", data)
                bot.send_message(message.chat.id, f"‚úÖ –°–æ–∑–¥–∞–Ω –Ω–æ–≤—ã–π –ø—É—Å—Ç–æ–π —Å–ø–∏—Å–æ–∫ '{list_name}'")
            return
        
        # –ï—Å–ª–∏ –µ—Å—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã - —Å–æ–∑–¥–∞–µ–º —Å–ø–∏—Å–æ–∫ –∏ –¥–æ–±–∞–≤–ª—è–µ–º —ç–ª–µ–º–µ–Ω—Ç
        params_text = command_parts[1] if len(command_parts) == 2 else command_parts[1] + ' ' + command_parts[2]
        
        # –ü–∞—Ä—Å–∏–º —Å—Å—ã–ª–∫—É –∏ –æ–ø–∏—Å–∞–Ω–∏–µ
        link = None
        description = ""
        
        words = params_text.split()
        if words and (words[0].startswith('http://') or words[0].startswith('https://')):
            link = words[0]
            description = ' '.join(words[1:]) if len(words) > 1 else ""
        else:
            description = params_text
        
        # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç
        new_item = {}
        if link:
            new_item['link'] = link
        if description:
            new_item['desc'] = description
        
        # –°–æ–∑–¥–∞–µ–º —Å–ø–∏—Å–æ–∫ –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
        if list_name not in data:
            data[list_name] = []
        
        # –î–æ–±–∞–≤–ª—è–µ–º —ç–ª–µ–º–µ–Ω—Ç –≤ —Å–ø–∏—Å–æ–∫
        data[list_name].append(new_item)
        save_data("lists.json", data)
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç
        response = f"‚úÖ "
        if list_name not in data:  # –ï—Å–ª–∏ —Å–ø–∏—Å–æ–∫ –±—ã–ª —Å–æ–∑–¥–∞–Ω —Ç–æ–ª—å–∫–æ —á—Ç–æ
            response += f"–°–æ–∑–¥–∞–Ω —Å–ø–∏—Å–æ–∫ '{list_name}' –∏ –¥–æ–±–∞–≤–ª–µ–Ω–æ:\n"
        else:
            response += f"–î–æ–±–∞–≤–ª–µ–Ω–æ –≤ —Å–ø–∏—Å–æ–∫ '{list_name}':\n"
        
        if link:
            response += f"üîó {link}\n"
        if description:
            response += f"üìù {description}"
        
        bot.send_message(message.chat.id, response)
        
    except Exception as e:
        bot.send_message(message.chat.id, f"‚ùå –û—à–∏–±–∫–∞: {str(e)}")