---
- name: Install required system packages
  ansible.builtin.package:
    name:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg
      - lsb-release
      - software-properties-common
    state: present
  when: ansible_os_family == "Debian"

- name: Add Docker GPG key
  ansible.builtin.apt_key:
    url: https://download.docker.com/linux/{{ ansible_distribution | lower }}/gpg
    state: present
  when: ansible_os_family == "Debian"

- name: Add Docker repository
  ansible.builtin.apt_repository:
    repo: "deb [arch=amd64] https://download.docker.com/linux/{{ ansible_distribution | lower }} {{ ansible_distribution_release }} stable"
    state: present
    update_cache: true
  when: ansible_os_family == "Debian"

- name: Install Docker packages
  ansible.builtin.package:
    name:
      - docker-ce
      - docker-ce-cli
      - containerd.io
    state: present
    update_cache: true
  when: ansible_os_family == "Debian"

- name: Install Docker Compose
  ansible.builtin.get_url:
    url: https://github.com/docker/compose/releases/download/v2.24.0/docker-compose-linux-x86_64
    dest: /usr/local/bin/docker-compose
    mode: '0755'
    owner: root
    group: root

- name: Create docker group
  ansible.builtin.group:
    name: docker
    state: present

- name: Add users to docker group
  ansible.builtin.user:
    name: "ubuntu"
    groups: docker
    append: true

- name: Start and enable Docker service
  ansible.builtin.systemd:
    name: docker
    state: started
    enabled: true

- name: Configure Docker daemon
  ansible.builtin.copy:
    content: |
      {
        "log-driver": "json-file",
        "log-opts": {
          "max-size": "10m",
          "max-file": "3"
        }
      }
    dest: /etc/docker/daemon.json
    mode: 0644 # noqa: yaml[octal-values]
  notify: Restart docker

- name: Ensure Docker service is running
  ansible.builtin.systemd:
    name: docker
    state: restarted
